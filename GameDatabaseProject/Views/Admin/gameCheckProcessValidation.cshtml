@model GameDatabaseProject.ProposedGames

@{
    ViewBag.Title = "gameCheckProcessValidation";
}

<h2>gameCheckProcessValidation</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Games</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>


		<div class="form-group">
			@Html.Label("Obrázek", new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<input type="file" id="picture" name="uploadPictureEdit" />
				@Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
				<p>
					<img src="@Url.Content(Model.Picture)" alt="" />
				</p>
				@Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
			</div>
		</div>

		@Html.HiddenFor(model => model.ProposedBy)


		<div class="form-group">
			@Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Genre_Id, "Genre_Id", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Genre_Id", (SelectList)ViewBag.GenreList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Genre_Id, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RankCount, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.RankCount, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.RankCount, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RankOveral, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.RankOveral, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.RankOveral, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DeviceId, "DeviceId", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("DeviceId", (SelectList)ViewBag.DeviceList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.DeviceId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.State_Id, "State_Id", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("State_Id", (SelectList)ViewBag.StateList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.State_Id, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
